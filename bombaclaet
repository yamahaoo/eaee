local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Distancia de renderizado
local renderDistance = 500
local ESPObjects = {} -- Tabla para almacenar los ESPs de cada personaje

-- Crear un Highlight (contorno)
local function createHighlight(character, color)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = character
    highlight.FillColor = color
    highlight.OutlineColor = color
    highlight.FillTransparency = 0.8
    highlight.OutlineTransparency = 0
    highlight.Parent = character
    return highlight
end

-- Crear un nametag
local function createNametag(character, text, color)
    local head = character:FindFirstChild("Head")
    if head then
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = head
        billboard.Size = UDim2.new(0, 100, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true
        
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = text
        textLabel.TextColor3 = color
        textLabel.TextScaled = true
        textLabel.Parent = billboard
        
        billboard.Parent = head
        return billboard
    end
end

-- Verifica si el personaje es NPC
local function isNPC(character)
    return not Players:GetPlayerFromCharacter(character)
end

-- Verifica si el personaje tiene un Tool
local function hasTool(character)
    for _, child in ipairs(character:GetChildren()) do
        if child:IsA("Tool") then
            return true
        end
    end
    return false
end

-- Crear GUI del slider
local function createSliderGui()
    local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    screenGui.Name = "ESPSliderGui"
    
    local frame = Instance.new("Frame", screenGui)
    frame.Size = UDim2.new(0, 200, 0, 100)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, 10)

    local titleLabel = Instance.new("TextLabel", frame)
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Text = "ESP Render Distance"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextScaled = true

    local sliderFrame = Instance.new("Frame", frame)
    sliderFrame.Size = UDim2.new(0.9, 0, 0, 10)
    sliderFrame.Position = UDim2.new(0.05, 0, 0, 50)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Instance.new("UICorner", sliderFrame).CornerRadius = UDim.new(0, 5)

    local sliderBar = Instance.new("Frame", sliderFrame)
    sliderBar.Size = UDim2.new(0.5, 0, 1, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    sliderBar.BorderSizePixel = 0
    Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(0, 5)

    local distanceLabel = Instance.new("TextLabel", frame)
    distanceLabel.Size = UDim2.new(1, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 0, 0, 70)
    distanceLabel.Text = "Distance: 500 studs"
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextScaled = true

    local dragging = false
    local function updateSlider(input)
        local relativeX = math.clamp((input.Position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
        sliderBar.Size = UDim2.new(relativeX, 0, 1, 0)
        renderDistance = math.floor(50 + (1000 - 50) * relativeX)
        distanceLabel.Text = "Distance: " .. renderDistance .. " studs"
    end

    sliderFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input)
        end
    end)
    sliderFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input)
        end
    end)
end

-- Función optimizada para actualizar el ESP
local function updateESP()
    local localCharacter = LocalPlayer.Character
    if not localCharacter then return end

    local localRoot = localCharacter:FindFirstChild("HumanoidRootPart")
    if not localRoot then return end

    local localPosition = localRoot.Position

    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            local character = player.Character
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local distance = (localPosition - humanoidRootPart.Position).Magnitude
                local isClose = distance <= renderDistance

                -- Buscar en caché
                local esp = ESPObjects[character]
                if not esp then
                    esp = {
                        highlight = createHighlight(character, Color3.new(1, 1, 1)),
                        nametag = createNametag(character, player.Name, Color3.new(1, 1, 1))
                    }
                    ESPObjects[character] = esp
                end

                -- Cambiar color solo si es necesario
                if isClose then
                    local color = hasTool(character) and Color3.new(1, 0, 0) or (isNPC(character) and Color3.new(0.5, 0, 0.5) or Color3.new(1, 1, 1))
                    esp.highlight.FillColor = color
                    esp.highlight.OutlineColor = color
                    esp.nametag.TextLabel.TextColor3 = color
                    esp.highlight.Enabled = true
                    esp.nametag.Enabled = true
                else
                    esp.highlight.Enabled = false
                    esp.nametag.Enabled = false
                end
            end
        end
    end
end

-- Crear GUI y conectar actualización
createSliderGui()
RunService.RenderStepped:Connect(updateESP)
